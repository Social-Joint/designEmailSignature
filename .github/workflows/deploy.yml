name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # Trigger the workflow when changes are pushed to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository to access files
      - name: Checkout repository
        uses: actions/checkout@v2


      - name: Fetch configuration from GitHub API
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}  # Securely use the token stored in secrets
        run: |
          curl -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/Social-Joint/designEmailSignature/contents/config.json


        
       # Set dynamic image filename (could be passed as an input from your API/backend)
      - name: Set dynamic image filename
        run: echo "IMAGE_FILENAME=${{ github.event.inputs.filename }}" >> $GITHUB_ENV  # Use the dynamic filename passed from API or frontend

    # Ensure the 'uploads' folder exists (if it doesn't already)
      - name: Create 'uploads' folder if it doesn't exist
        run: |
          mkdir -p uploads
          

      # Upload image to the 'uploads' folder
      - name: Upload image to the uploads folder
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}  # Securely use the token stored in secrets
        run: |
          # Assuming the image content is passed dynamically as well 
          IMAGE_CONTENT=$(base64 -w 0 "${{ env.IMAGE_FILENAME }}")  # Base64 encode the file content


          # Use GitHub API to upload the image
          curl -X PUT \
            -H "Authorization: token $GITHUB_TOKEN" \
            -d '{"message": "Upload dynamic image", "content": "'$IMAGE_CONTENT'", "path": "uploads/'$IMAGE_FILENAME'", "branch": "main"}' \
            https://api.github.com/repos/Social-Joint/designEmailSignature/uploads/$IMAGE_FILENAME

 
      # Deploy to GitHub Pages (assuming you want to deploy the build folder)
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.TOKEN }}  # Use GITHUB_TOKEN to authenticate
          publish_dir: ./build  # Directory to deploy (make sure you have the correct path)
